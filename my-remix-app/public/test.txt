{
                    id: "node",
                    title: t("pi.node.title"),
                    content: (
                        <div className="space-y-6">
                            <div className="bg-gray-800 p-6 rounded-lg">
                                <h3 className="text-xl font-bold mb-4 text-white">{t('pi.node.subtitle')}</h3>

                                <div className="space-y-4 text-gray-300">
                                    {(t('pi.node.description') as string[]).map((paragraph, index) => (
                                        <p key={index}>{paragraph}</p>
                                    ))}
                                </div>

                                <div className="mt-8">
                                    <h4 className="text-lg font-bold mb-4 text-white">{t('pi.node.history.title')}</h4>
                                    <ul className="space-y-3 text-gray-300">
                                        {(t('pi.node.history.items') as string[]).map((item, index) => (
                                            <li key={index}>• {item}</li>
                                        ))}
                                    </ul>
                                </div>

                                <div className="mt-8">
                                    <h4 className="text-lg font-bold mb-4 text-white">{t('pi.node.features.title')}</h4>
                                    <ul className="space-y-3 text-gray-300">
                                        {(t('pi.node.features.items') as string[]).map((item, index) => (
                                            <li key={index}>• {item}</li>
                                        ))}
                                    </ul>
                                </div>

                                <div className="mt-8">
                                    <h4 className="text-lg font-bold mb-4 text-white">{t('pi.node.ongoing.title')}</h4>
                                    <ul className="space-y-3 text-gray-300">
                                        {(t('pi.node.ongoing.items') as string[]).map((item, index) => (
                                            <li key={index}>• {item}</li>
                                        ))}
                                    </ul>
                                </div>

                                <div className="mt-4 text-blue-400">
                                    <p>{t('pi.node.future')}</p>
                                </div>
                            </div>
                        </div>
                    )
                },
                {
                    id: "kyc",
                    title: t("pi.kyc.title"),
                    content: (
                        <div className="space-y-6">
                            <div className="bg-gray-800 p-6 rounded-lg">
                                <h3 className="text-xl font-bold mb-4 text-white">{t('pi.kyc.subtitle')}</h3>

                                <div className="space-y-4 text-gray-300">
                                    {(t('pi.kyc.description') as string[]).map((paragraph, index) => (
                                        <p key={index}>{paragraph}</p>
                                    ))}

                                    <p className="text-blue-400 hover:text-blue-300">
                                        <a href="https://minepi.com/blog/pi-network-kyc/" target="_blank" rel="noopener noreferrer">
                                            {t('pi.kyc.learn_more')}
                                        </a>
                                    </p>
                                </div>

                                <div className="mt-8">
                                    <h4 className="text-lg font-bold mb-4 text-white">{t('pi.kyc.history.title')}</h4>
                                    <ul className="space-y-3 text-gray-300">
                                        {(t('pi.kyc.history.items') as string[]).map((item, index) => (
                                            <li key={index}>• {item}</li>
                                        ))}
                                    </ul>
                                </div>

                                <div className="mt-8">
                                    <h4 className="text-lg font-bold mb-4 text-white">{t('pi.kyc.features.title')}</h4>
                                    <ul className="space-y-3 text-gray-300">
                                        {(t('pi.kyc.features.items') as string[]).map((item, index) => (
                                            <li key={index}>• {item}</li>
                                        ))}
                                    </ul>
                                </div>

                                <div className="mt-8">
                                    <h4 className="text-lg font-bold mb-4 text-white">{t('pi.kyc.ongoing.title')}</h4>
                                    <ul className="space-y-3 text-gray-300">
                                        {(t('pi.kyc.ongoing.items') as string[]).map((item, index) => (
                                            <li key={index}>• {item}</li>
                                        ))}
                                    </ul>
                                </div>

                                <div className="mt-4 text-blue-400">
                                    <p>{t('pi.kyc.future')}</p>
                                </div>
                            </div>
                        </div>
                    )
                },
                {
                    id: "token-model",
                    title: t("pi.token.title"),
                    content: (
                        <div className="space-y-6">
                            <div className="bg-gray-800 p-6 rounded-lg">
                                <h3 className="text-xl font-bold mb-4 text-white">{t('pi.token.subtitle')}</h3>

                                <div className="space-y-4 text-gray-300">
                                    {(t('pi.token.description') as string[]).map((paragraph, index) => (
                                        <p key={index}>{paragraph}</p>
                                    ))}
                                </div>

                                <div className="mt-8">
                                    <h4 className="text-lg font-bold mb-4 text-white">{t('pi.token.history.title')}</h4>
                                    <ul className="space-y-3 text-gray-300">
                                        {(t('pi.token.history.items') as string[]).map((item, index) => (
                                            <li key={index}>• {item}</li>
                                        ))}
                                    </ul>
                                </div>

                                <div className="mt-8">
                                    <h4 className="text-lg font-bold mb-4 text-white">{t('pi.token.ongoing.title')}</h4>
                                    <ul className="space-y-3 text-gray-300">
                                        {(t('pi.token.ongoing.items') as string[]).map((item, index) => (
                                            <li key={index}>• {item}</li>
                                        ))}
                                    </ul>
                                </div>

                                <div className="mt-4 text-blue-400">
                                    <p>{t('pi.token.future')}</p>
                                </div>
                            </div>
                        </div>
                    )
                },
                {
                    id: "pi-wallet",
                    title: t("pi.wallet.title"),
                    content: (
                        <div className="space-y-6">
                            <div className="bg-gray-800 p-6 rounded-lg">
                                <h3 className="text-xl font-bold mb-4 text-white">{t('pi.wallet.subtitle')}</h3>

                                <div className="space-y-4 text-gray-300">
                                    {(t('pi.wallet.description') as string[]).map((paragraph, index) => (
                                        <p key={index}>{paragraph}</p>
                                    ))}

                                    <p className="text-blue-400 hover:text-blue-300">
                                        <a href="https://minepi.com/faqs/how-do-we-create-and-use-the-pi-wallet-and-can-we-use-an-external-wallet-to-hold-our-pi-in-the-future/"
                                            target="_blank"
                                            rel="noopener noreferrer">
                                            {t('pi.wallet.learn_more')}
                                        </a>
                                    </p>
                                </div>

                                <div className="mt-8">
                                    <h4 className="text-lg font-bold mb-4 text-white">{t('pi.wallet.history.title')}</h4>
                                    <ul className="space-y-3 text-gray-300">
                                        {(t('pi.wallet.history.items') as string[]).map((item, index) => (
                                            <li key={index}>• {item}</li>
                                        ))}
                                    </ul>
                                </div>

                                <div className="mt-8">
                                    <h4 className="text-lg font-bold mb-4 text-white">{t('pi.wallet.ongoing.title')}</h4>
                                    <ul className="space-y-3 text-gray-300">
                                        {(t('pi.wallet.ongoing.items') as string[]).map((item, index) => (
                                            <li key={index}>• {item}</li>
                                        ))}
                                    </ul>
                                </div>

                                <div className="mt-4 text-blue-400">
                                    <p>{t('pi.wallet.future')}</p>
                                </div>
                            </div>
                        </div>
                    )
                },
                {
                    id: "block-explorer",
                    title: t("pi.explorer.title"),
                    content: (
                        <div className="space-y-6">
                            <div className="bg-gray-800 p-6 rounded-lg">
                                <h3 className="text-xl font-bold mb-4 text-white">{t('pi.explorer.subtitle')}</h3>

                                <div className="space-y-4 text-gray-300">
                                    {(t('pi.explorer.description') as string[]).map((paragraph, index) => (
                                        <p key={index}>{paragraph}</p>
                                    ))}
                                </div>

                                <div className="mt-8">
                                    <h4 className="text-lg font-bold mb-4 text-white">{t('pi.explorer.history.title')}</h4>
                                    <ul className="space-y-3 text-gray-300">
                                        {(t('pi.explorer.history.items') as string[]).map((item, index) => (
                                            <li key={index}>• {item}</li>
                                        ))}
                                    </ul>
                                </div>

                                <div className="mt-4 text-blue-400">
                                    <p>{t('pi.explorer.future')}</p>
                                </div>
                            </div>
                        </div>
                    )
                }
            ]
        },
        {
            id: "util-bonus",
            title: t("pi.util.title"),
            content: (
                <div className="space-y-6">
                    <div className="bg-gray-800 p-6 rounded-lg">
                        <h3 className="text-xl font-bold mb-6 text-white">{t('pi.util.subtitle')}</h3>

                        <div className="space-y-6">
                            <div className="bg-gray-700 p-4 rounded-lg">
                                <h4 className="text-lg font-bold mb-4 text-white">{t('pi.util.required.title')}</h4>
                                <ul className="space-y-4 text-gray-300">
                                    {(t('pi.util.required.items') as Array<string | { text: string, warning: string }>).map((item, index) => (
                                        <li key={index} className="flex items-start">
                                            <span className="text-yellow-500 mr-2">🔸️</span>
                                            {typeof item === 'string' ? (
                                                <span>{item}</span>
                                            ) : (
                                                <span>
                                                    {item.text}<br />
                                                    <span className="text-yellow-500">⚠️</span> {item.warning}
                                                </span>
                                            )}
                                        </li>
                                    ))}
                                </ul>
                            </div>

                            <div className="bg-gray-700 p-4 rounded-lg">
                                <h4 className="text-lg font-bold mb-4 text-white">{t('pi.util.caution.title')}</h4>
                                <ul className="space-y-4 text-gray-300">
                                    {(t('pi.util.caution.items') as string[]).map((item, index) => (
                                        <li key={index} className="flex items-start">
                                            <span className="text-yellow-500 mr-2">⚠️</span>
                                            <span>{item}</span>
                                        </li>
                                    ))}
                                </ul>
                            </div>

                            <div className="bg-gray-700 p-4 rounded-lg">
                                <h4 className="text-lg font-bold mb-4 text-white">{t('pi.util.additional.title')}</h4>
                                <ul className="space-y-4 text-gray-300">
                                    {(t('pi.util.additional.items') as string[]).map((item, index) => (
                                        <li key={index} className="flex items-start">
                                            <span className="text-yellow-500 mr-2">✴️</span>
                                            <span>{item}</span>
                                        </li>
                                    ))}
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            )
        },
        {
            id: "node-detail-info", // 새로운 ID
            title: t("pi.node_detail.title"),
            content: (
                <div className="space-y-6">
                    <div className="bg-gray-800 p-6 rounded-lg">
                        <h3 className="text-xl font-bold mb-6 text-white">{t('pi.node_detail.subtitle')}</h3>

                        <div className="space-y-6">
                            {[
                                { title: 'basic', icon: '🔸️' },
                                { title: 'operation', icon: '🔸️' },
                                { title: 'technical', icon: '🔸️' },
                                { title: 'hardware', icon: '🔸️' },
                                { title: 'caution', icon: '⚠️' },
                                { title: 'additional', icon: '🔸️' }
                            ].map(section => (
                                <div key={section.title} className="bg-gray-700 p-4 rounded-lg">
                                    <h4 className="text-lg font-bold mb-4 text-white">
                                        {t(`pi.node_detail.${section.title}.title`)}
                                    </h4>
                                    <ul className="space-y-4 text-gray-300">
                                        {(t(`pi.node_detail.${section.title}.items`) as Array<string | { text: string, isWarning?: boolean, isDanger?: boolean, isNote?: boolean }>).map((item, index) => (
                                            <li key={index} className="flex items-start">
                                                <span className={`mr-2 ${typeof item === 'object' && item.isDanger ? 'text-red-500' :
                                                    typeof item === 'object' && item.isWarning ? 'text-yellow-500' :
                                                        typeof item === 'object' && item.isNote ? 'text-yellow-500' :
                                                            'text-yellow-500'
                                                    }`}>
                                                    {typeof item === 'object' && item.isDanger ? '🚫' :
                                                        typeof item === 'object' && item.isWarning ? '⚠️' :
                                                            typeof item === 'object' && item.isNote ? '✴️' :
                                                                section.icon}
                                                </span>
                                                <span>{typeof item === 'object' ? item.text : item}</span>
                                            </li>
                                        ))}
                                    </ul>
                                </div>
                            ))}
                        </div>
                    </div>
                </div>
            )
        },
        {
            id: "node-install",
            title: t("pi.node_install.title"),
            content: (
                <div className="space-y-6">
                    <div className="bg-gray-800 p-6 rounded-lg">
                        <h3 className="text-xl font-bold mb-6 text-white">{t('pi.node_install.subtitle')}</h3>

                        <div className="space-y-6">
                            <div className="bg-gray-700 p-4 rounded-lg">
                                <h4 className="text-lg font-bold mb-4 text-white flex items-center">
                                    <span className="text-yellow-500 mr-2">⚠️</span>
                                    <span>{t('pi.node_install.requirements.title')}</span>
                                </h4>
                                <p className="text-gray-300 ml-6">{t('pi.node_install.requirements.content')}</p>
                            </div>

                            <div className="bg-gray-700 p-4 rounded-lg">
                                <h4 className="text-lg font-bold mb-4 text-white">{t('pi.node_install.steps.title')}</h4>
                                <ul className="space-y-4 text-gray-300">
                                    {(t('pi.node_install.steps.items') as Array<string | { text: string, hasCheckmark?: boolean, hasLineBreak?: boolean }>).map((item, index) => (
                                        <li key={index} className="flex items-start">
                                            <span className="text-blue-400 mr-2 min-w-[24px]">{`${index}️⃣`}</span>
                                            <span>
                                                {typeof item === 'object' ? (
                                                    <>
                                                        {item.text.split('\n').map((line, i) => (
                                                            <React.Fragment key={i}>
                                                                {line}
                                                                {item.hasCheckmark && line.startsWith('✔️') && <span className="text-green-500">✔️</span>}
                                                                {item.hasLineBreak && i < item.text.split('\n').length - 1 && <br />}
                                                            </React.Fragment>
                                                        ))}
                                                    </>
                                                ) : (
                                                    item
                                                )}
                                            </span>
                                        </li>
                                    ))}
                                </ul>
                            </div>

                            <div className="bg-gray-700 p-4 rounded-lg">
                                <h4 className="text-lg font-bold mb-4 text-white">{t('pi.node_install.additional.title')}</h4>
                                <ul className="space-y-4 text-gray-300">
                                    {(t('pi.node_install.additional.items') as string[]).map((item, index) => (
                                        <li key={index} className="flex items-start">
                                            <span className="text-yellow-500 mr-2">✴️</span>
                                            <span>{item}</span>
                                        </li>
                                    ))}
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            )
        },
        {
            id: "fireside",
            title: t("pi.fireside.title"),
            content: (
                <div className="space-y-6">
                    <div className="bg-gray-800 p-6 rounded-lg">
                        <h3 className="text-xl font-bold mb-6 text-white">{t('pi.fireside.subtitle')}</h3>

                        <div className="space-y-6">
                            {[
                                'purpose',
                                'fire',
                                'token',
                                'duration'
                            ].map(section => (
                                <div key={section} className="bg-gray-700 p-4 rounded-lg">
                                    <h4 className="text-lg font-bold mb-4 text-white">{t(`pi.fireside.${section}.title`)}</h4>
                                    <div className="space-y-4 text-gray-300">
                                        <p className="flex items-start">
                                            <span className="text-blue-400 mr-2">➡️</span>
                                            <span>{t(`pi.fireside.${section}.content`)}</span>
                                        </p>
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>
                </div>
            )
        }